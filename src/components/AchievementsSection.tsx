import React, { useEffect, useState } from "react";
import { Star, Mountain, HardHat, Crown, Medal } from "lucide-react";
import { supabase } from "../lib/supabaseClient";
import "../index.css";

const achievementsList = [
  { id: 1, icon: Star, title: "–ù–æ–≤–∏—á–æ–∫", desc: "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∫—É—Ä—Å–∞" },
  { id: 2, icon: Mountain, title: "–ì–µ–æ–ª–æ–≥-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å", desc: "–ò–∑—É—á–µ–Ω—ã –æ—Å–Ω–æ–≤—ã –≥–µ–æ–ª–æ–≥–∏–∏" },
  { id: 3, icon: HardHat, title: "–ò–Ω–∂–µ–Ω–µ—Ä –¥–æ–±—ã—á–∏", desc: "–ü—Ä–æ–π–¥–µ–Ω –∫—É—Ä—Å –ø–æ –º–µ—Ç–æ–¥–∞–º –¥–æ–±—ã—á–∏" },
  { id: 4, icon: Crown, title: "–ú–∞—Å—Ç–µ—Ä –Ω–µ—Ñ—Ç–µ–≥–∞–∑–æ–≤–æ–π –æ—Ç—Ä–∞—Å–ª–∏", desc: "100% –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤" },
  { id: 5, icon: Medal, title: "–õ–µ–≥–µ–Ω–¥–∞ –Ω–µ—Ñ—Ç–µ–≥–∞–∑–∞", desc: "90%+ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –≤–æ –≤—Å–µ—Ö —Ç–µ—Å—Ç–∞—Ö" },
];

const AchievementsSection: React.FC = () => {
  const [earnedAchievements, setEarnedAchievements] = useState<number[]>([]);
  const [userId, setUserId] = useState<string | null>(null);
  const [loading, setLoading] = useState(true);

  // üü° –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    const loadUser = async () => {
      const { data, error } = await supabase.auth.getUser();
      if (error) {
        console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error.message);
        setLoading(false);
        return;
      }
      if (data?.user) {
        setUserId(data.user.id);
      } else {
        setLoading(false);
      }
    };

    loadUser();

    const { data: authListener } = supabase.auth.onAuthStateChange((_event, session) => {
      if (session?.user) {
        setUserId(session.user.id);
      } else {
        setUserId(null);
        setEarnedAchievements([]);
      }
    });

    return () => {
      authListener.subscription.unsubscribe();
    };
  }, []);

  // üü¢ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    const fetchAchievements = async () => {
      if (!userId) {
        setLoading(false);
        return;
      }

      const { data, error } = await supabase
        .from("user_achievements")
        .select("achievement_id")
        .eq("user_id", userId);

      if (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:", error.message);
        setLoading(false);
        return;
      }

      if (data) {
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º achievement_id –≤ —á–∏—Å–ª–∞
        setEarnedAchievements(data.map((a) => Number(a.achievement_id)));
      }

      setLoading(false);
    };

    fetchAchievements();
  }, [userId]);

  return (
    <section id="achievements" className="py-16 bg-white relative overflow-hidden">
      <div className="container mx-auto px-4">
        <h2 className="text-3xl font-bold text-center mb-12">üèÜ –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π</h2>

        {loading ? (
          <p className="text-center text-gray-500">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π...</p>
        ) : !userId ? (
          <p className="text-center text-gray-500">
            üîê –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.
          </p>
        ) : (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6">
            {achievementsList.map(({ id, icon: Icon, title, desc }) => {
              const isEarned = earnedAchievements.includes(id);
              return (
                <div
                  key={id}
                  className={`p-4 rounded-lg text-center transition transform hover:-translate-y-1 ${
                    isEarned
                      ? "bg-yellow-100 border-2 border-yellow-400 shadow-[0_0_25px_rgba(255,215,0,0.6)] animate-glow"
                      : "bg-gray-100"
                  }`}
                >
                  <div
                    className={`rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-3 transition-all duration-300 ${
                      isEarned
                        ? "bg-yellow-500 text-black shadow-[0_0_20px_rgba(255,215,0,0.8)] scale-110"
                        : "bg-gray-300 text-gray-600"
                    }`}
                  >
                    <Icon className="w-8 h-8" />
                  </div>
                  <h3 className="font-bold mb-1">{title}</h3>
                  <p className="text-sm text-gray-600">{desc}</p>
                </div>
              );
            })}
          </div>
        )}
      </div>
    </section>
  );
};

export default AchievementsSection;
